import React, { Component } from 'react';
import './Tabs.css';

import { Tab } from './types';
import TabView from './TabView';

interface TabsProps {
  tabs: Tab[];
}

interface TabsState {
  activeTabId: string;
  expandCl: string;
  collapseCl: string;
  toggletabHidden: string;
}

class Tabs extends Component<TabsProps, TabsState> {
  constructor(props: TabsProps) {
    super(props);

    this.state = {
      activeTabId: props.tabs.length > 0 ? props.tabs[0].id : '',
      expandCl: 'visibleToggle',
      collapseCl: 'hiddenToggle',
      toggletabHidden: 'toggletabHidden',
    };

    this.openTab = this.openTab.bind(this);
    this.renderTabButtons = this.renderTabButtons.bind(this);
    this.renderTabContent = this.renderTabContent.bind(this);
    this.renderTabToggleButtons = this.renderTabToggleButtons.bind(this);
    this.handlechangefunction = this.handlechangefunction.bind(this);
  }

  openTab(tabId: string) {
    console.log(tabId);
    this.setState({ activeTabId: tabId });
  }

  renderTabButtons(tab: Tab) {
    var style =
      this.state.activeTabId == tab.id
        ? 'nav-item nav-link bg-light font-weight-bold border-bottom border-success tabselected'
        : 'nav-item nav-link text-secondary ';
    var styleh = this.state.activeTabId == tab.id ? 'text-white' : 'text-dark';
    return (
      <button
        key={tab.id}
        className={style}
        id={tab.id}
        onClick={() => this.openTab(tab.id)}
        title={tab.description}
      >
        {tab.name}
      </button>
    );
  }
  renderTabToggleButtons(tab: Tab) {
    var style =
      this.state.activeTabId == tab.id
        ? 'nav-item nav-link tabselected  bg-dark text-white'
        : ' nav-item nav-link text-dark';
    var styleh =
      this.state.activeTabId == tab.id
        ? { color: '#8A2BE2' }
        : { color: '#778899' };
    return (
      <a
        key={tab.id}
        className={style}
        id={tab.id}
        onClick={() => this.openTab(tab.id)}
        title={tab.description}
      >
        {tab.description}
      </a>
      //<button key={tab.id} classNameName="bg-primary"  id={tab.id} onClick={()=>this.openTab(tab.id)} title={tab.description}>{tab.name}</button>
    );
  }
  handlechangefunction() {
    if (this.state.expandCl == 'visibleToggle') {
      this.setState({ expandCl: 'hiddenToggle' });
      this.setState({ collapseCl: 'visibleToggle' });
      this.setState({ toggletabHidden: 'toggletabvisible' });
    } else {
      this.setState({ expandCl: 'visibleToggle' });
      this.setState({ collapseCl: 'hiddenToggle' });
      this.setState({ toggletabHidden: 'toggletabHidden' });
    }
  }

  renderTabContent(tab: Tab) {
    var style =
      this.state.activeTabId == tab.id
        ? { display: 'block' }
        : { display: 'none' };
    return (
      <div key={tab.id} id={tab.id} className="" style={style}>
        <TabView tab={tab} />
      </div>
    );
  }

  render() {
    return (
      <div className="tab">
        <div className="tabvisible">
          <div className="tabheader bg-info">
            <nav className="nav nav-pills nav-justified ">
              {this.props.tabs.map(this.renderTabButtons)}
            </nav>
          </div>
        </div>
        <div className="tabHidden">
          <div className="bg-warning py-1 pl-3 text-left">
            <h1>
              <a
                className={this.state.expandCl}
                onClick={this.handlechangefunction}
              >
                &#43;
              </a>
            </h1>

            <h1>
              <a
                className={this.state.collapseCl}
                onClick={this.handlechangefunction}
              >
                &#45;
              </a>
            </h1>
          </div>
          <div className="bg-light">
            <div className={this.state.toggletabHidden}>
              {this.props.tabs.map(this.renderTabToggleButtons)}
            </div>
          </div>
        </div>
        <div className="tabcontent bg-light">
          {this.props.tabs.map(this.renderTabContent)}
        </div>
      </div>
    );
  }
}

export default Tabs;
